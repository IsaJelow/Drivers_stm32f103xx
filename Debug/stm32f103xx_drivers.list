
stm32f103xx_drivers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000130  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000063c  08000130  08000130  00010130  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  0800076c  08000774  00010774  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  0800076c  0800076c  00010774  2**0
                  CONTENTS
  4 .ARM          00000000  0800076c  0800076c  00010774  2**0
                  CONTENTS
  5 .preinit_array 00000000  0800076c  08000774  00010774  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800076c  0800076c  0001076c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000770  08000770  00010770  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00010774  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  08000774  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  08000774  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  00010774  2**0
                  CONTENTS, READONLY
 12 .comment      00000043  00000000  00000000  0001079d  2**0
                  CONTENTS, READONLY
 13 .debug_info   00000879  00000000  00000000  000107e0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 0000024c  00000000  00000000  00011059  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 000000c0  00000000  00000000  000112a8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 00000085  00000000  00000000  00011368  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00001450  00000000  00000000  000113ed  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00000e83  00000000  00000000  0001283d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    00005040  00000000  00000000  000136c0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_frame  0000023c  00000000  00000000  00018700  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000087  00000000  00000000  0001893c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000130 <__do_global_dtors_aux>:
 8000130:	b510      	push	{r4, lr}
 8000132:	4c05      	ldr	r4, [pc, #20]	; (8000148 <__do_global_dtors_aux+0x18>)
 8000134:	7823      	ldrb	r3, [r4, #0]
 8000136:	b933      	cbnz	r3, 8000146 <__do_global_dtors_aux+0x16>
 8000138:	4b04      	ldr	r3, [pc, #16]	; (800014c <__do_global_dtors_aux+0x1c>)
 800013a:	b113      	cbz	r3, 8000142 <__do_global_dtors_aux+0x12>
 800013c:	4804      	ldr	r0, [pc, #16]	; (8000150 <__do_global_dtors_aux+0x20>)
 800013e:	f3af 8000 	nop.w
 8000142:	2301      	movs	r3, #1
 8000144:	7023      	strb	r3, [r4, #0]
 8000146:	bd10      	pop	{r4, pc}
 8000148:	20000000 	.word	0x20000000
 800014c:	00000000 	.word	0x00000000
 8000150:	08000754 	.word	0x08000754

08000154 <frame_dummy>:
 8000154:	b508      	push	{r3, lr}
 8000156:	4b03      	ldr	r3, [pc, #12]	; (8000164 <frame_dummy+0x10>)
 8000158:	b11b      	cbz	r3, 8000162 <frame_dummy+0xe>
 800015a:	4903      	ldr	r1, [pc, #12]	; (8000168 <frame_dummy+0x14>)
 800015c:	4803      	ldr	r0, [pc, #12]	; (800016c <frame_dummy+0x18>)
 800015e:	f3af 8000 	nop.w
 8000162:	bd08      	pop	{r3, pc}
 8000164:	00000000 	.word	0x00000000
 8000168:	20000004 	.word	0x20000004
 800016c:	08000754 	.word	0x08000754

08000170 <main>:
#include "stm32f103xx.h"
#include "stm32f103xx_gpio_driver.h"
void F_Clock_Init(void);
void F_GPIOx_Init(void);
int main(void)
{
 8000170:	b580      	push	{r7, lr}
 8000172:	af00      	add	r7, sp, #0

	F_Clock_Init();
 8000174:	f000 f812 	bl	800019c <F_Clock_Init>
	F_GPIOx_Init();
 8000178:	f000 f82a 	bl	80001d0 <F_GPIOx_Init>

	while(1){
	if(GPIO_ReadFromInputPin(GPIOA, GPIO_PIN10) == 1){
 800017c:	210a      	movs	r1, #10
 800017e:	4805      	ldr	r0, [pc, #20]	; (8000194 <main+0x24>)
 8000180:	f000 fa80 	bl	8000684 <GPIO_ReadFromInputPin>
 8000184:	4603      	mov	r3, r0
 8000186:	2b01      	cmp	r3, #1
 8000188:	d1f8      	bne.n	800017c <main+0xc>
		GPIO_ToggleOutputPin(GPIOC, GPIO_PIN13);
 800018a:	210d      	movs	r1, #13
 800018c:	4802      	ldr	r0, [pc, #8]	; (8000198 <main+0x28>)
 800018e:	f000 fa90 	bl	80006b2 <GPIO_ToggleOutputPin>
	if(GPIO_ReadFromInputPin(GPIOA, GPIO_PIN10) == 1){
 8000192:	e7f3      	b.n	800017c <main+0xc>
 8000194:	40010800 	.word	0x40010800
 8000198:	40011000 	.word	0x40011000

0800019c <F_Clock_Init>:
	}
	}
}
void F_Clock_Init(void)
{
 800019c:	b480      	push	{r7}
 800019e:	af00      	add	r7, sp, #0
	HSI_ON();
 80001a0:	4b0a      	ldr	r3, [pc, #40]	; (80001cc <F_Clock_Init+0x30>)
 80001a2:	681b      	ldr	r3, [r3, #0]
 80001a4:	4a09      	ldr	r2, [pc, #36]	; (80001cc <F_Clock_Init+0x30>)
 80001a6:	f043 0301 	orr.w	r3, r3, #1
 80001aa:	6013      	str	r3, [r2, #0]
	SELECT_HSI();
 80001ac:	4b07      	ldr	r3, [pc, #28]	; (80001cc <F_Clock_Init+0x30>)
 80001ae:	685b      	ldr	r3, [r3, #4]
 80001b0:	4a06      	ldr	r2, [pc, #24]	; (80001cc <F_Clock_Init+0x30>)
 80001b2:	f023 63e0 	bic.w	r3, r3, #117440512	; 0x7000000
 80001b6:	6053      	str	r3, [r2, #4]
 80001b8:	4b04      	ldr	r3, [pc, #16]	; (80001cc <F_Clock_Init+0x30>)
 80001ba:	685b      	ldr	r3, [r3, #4]
 80001bc:	4a03      	ldr	r2, [pc, #12]	; (80001cc <F_Clock_Init+0x30>)
 80001be:	f043 63a0 	orr.w	r3, r3, #83886080	; 0x5000000
 80001c2:	6053      	str	r3, [r2, #4]
	}
 80001c4:	bf00      	nop
 80001c6:	46bd      	mov	sp, r7
 80001c8:	bc80      	pop	{r7}
 80001ca:	4770      	bx	lr
 80001cc:	40021000 	.word	0x40021000

080001d0 <F_GPIOx_Init>:
void F_GPIOx_Init(void){
 80001d0:	b580      	push	{r7, lr}
 80001d2:	b084      	sub	sp, #16
 80001d4:	af00      	add	r7, sp, #0

	GPIO_PeriClockControl(GPIOA, ENABLE);
 80001d6:	2101      	movs	r1, #1
 80001d8:	4811      	ldr	r0, [pc, #68]	; (8000220 <F_GPIOx_Init+0x50>)
 80001da:	f000 f84f 	bl	800027c <GPIO_PeriClockControl>
	GPIO_Handle_t GPIO_Init_struct;
	GPIO_Init_struct.pGPIOx= GPIOA;
 80001de:	4b10      	ldr	r3, [pc, #64]	; (8000220 <F_GPIOx_Init+0x50>)
 80001e0:	60bb      	str	r3, [r7, #8]
	GPIO_Init_struct.GPIO_PinCnfg.GPIO_PinNumber=GPIO_PIN10;
 80001e2:	230a      	movs	r3, #10
 80001e4:	733b      	strb	r3, [r7, #12]
	GPIO_Init_struct.GPIO_PinCnfg.GPIO_PinMode=GPIO_MODE_IN;
 80001e6:	2300      	movs	r3, #0
 80001e8:	737b      	strb	r3, [r7, #13]
	GPIO_Init_struct.GPIO_PinCnfg.GPIO_PinInputOutputMode=GPIO_MODE_PU_PD;
 80001ea:	2302      	movs	r3, #2
 80001ec:	73bb      	strb	r3, [r7, #14]

	GPIO_Init(&GPIO_Init_struct);
 80001ee:	f107 0308 	add.w	r3, r7, #8
 80001f2:	4618      	mov	r0, r3
 80001f4:	f000 f8ca 	bl	800038c <GPIO_Init>

	GPIO_PeriClockControl(GPIOC, ENABLE);
 80001f8:	2101      	movs	r1, #1
 80001fa:	480a      	ldr	r0, [pc, #40]	; (8000224 <F_GPIOx_Init+0x54>)
 80001fc:	f000 f83e 	bl	800027c <GPIO_PeriClockControl>
		GPIO_Handle_t GPIOC_Init_struct;
		GPIOC_Init_struct.pGPIOx= GPIOC;
 8000200:	4b08      	ldr	r3, [pc, #32]	; (8000224 <F_GPIOx_Init+0x54>)
 8000202:	603b      	str	r3, [r7, #0]
		GPIOC_Init_struct.GPIO_PinCnfg.GPIO_PinNumber=GPIO_PIN13;
 8000204:	230d      	movs	r3, #13
 8000206:	713b      	strb	r3, [r7, #4]
		GPIOC_Init_struct.GPIO_PinCnfg.GPIO_PinMode=GPIO_MODE_OUT_LOWS;
 8000208:	2302      	movs	r3, #2
 800020a:	717b      	strb	r3, [r7, #5]
		GPIOC_Init_struct.GPIO_PinCnfg.GPIO_PinInputOutputMode=GPIO_MODE_OUT_PP;
 800020c:	2300      	movs	r3, #0
 800020e:	71bb      	strb	r3, [r7, #6]

		GPIO_Init(&GPIOC_Init_struct);
 8000210:	463b      	mov	r3, r7
 8000212:	4618      	mov	r0, r3
 8000214:	f000 f8ba 	bl	800038c <GPIO_Init>

}
 8000218:	bf00      	nop
 800021a:	3710      	adds	r7, #16
 800021c:	46bd      	mov	sp, r7
 800021e:	bd80      	pop	{r7, pc}
 8000220:	40010800 	.word	0x40010800
 8000224:	40011000 	.word	0x40011000

08000228 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000228:	480d      	ldr	r0, [pc, #52]	; (8000260 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800022a:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 800022c:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000230:	480c      	ldr	r0, [pc, #48]	; (8000264 <LoopForever+0x6>)
  ldr r1, =_edata
 8000232:	490d      	ldr	r1, [pc, #52]	; (8000268 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000234:	4a0d      	ldr	r2, [pc, #52]	; (800026c <LoopForever+0xe>)
  movs r3, #0
 8000236:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000238:	e002      	b.n	8000240 <LoopCopyDataInit>

0800023a <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800023a:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 800023c:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800023e:	3304      	adds	r3, #4

08000240 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000240:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000242:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000244:	d3f9      	bcc.n	800023a <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000246:	4a0a      	ldr	r2, [pc, #40]	; (8000270 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000248:	4c0a      	ldr	r4, [pc, #40]	; (8000274 <LoopForever+0x16>)
  movs r3, #0
 800024a:	2300      	movs	r3, #0
  b LoopFillZerobss
 800024c:	e001      	b.n	8000252 <LoopFillZerobss>

0800024e <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800024e:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000250:	3204      	adds	r2, #4

08000252 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000252:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000254:	d3fb      	bcc.n	800024e <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000256:	f000 fa59 	bl	800070c <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800025a:	f7ff ff89 	bl	8000170 <main>

0800025e <LoopForever>:

LoopForever:
  b LoopForever
 800025e:	e7fe      	b.n	800025e <LoopForever>
  ldr   r0, =_estack
 8000260:	20005000 	.word	0x20005000
  ldr r0, =_sdata
 8000264:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000268:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 800026c:	08000774 	.word	0x08000774
  ldr r2, =_sbss
 8000270:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000274:	2000001c 	.word	0x2000001c

08000278 <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000278:	e7fe      	b.n	8000278 <ADC1_2_IRQHandler>
	...

0800027c <GPIO_PeriClockControl>:
 * @EnOrDi  Enable or Disable MACRO
 *
 * @return none
 * */
void GPIO_PeriClockControl(GPIO_Reg_Def_t *pGPIOx,uint8_t EnOrDi)
{
 800027c:	b480      	push	{r7}
 800027e:	b083      	sub	sp, #12
 8000280:	af00      	add	r7, sp, #0
 8000282:	6078      	str	r0, [r7, #4]
 8000284:	460b      	mov	r3, r1
 8000286:	70fb      	strb	r3, [r7, #3]
	if(EnOrDi == ENABLE)
 8000288:	78fb      	ldrb	r3, [r7, #3]
 800028a:	2b01      	cmp	r3, #1
 800028c:	d136      	bne.n	80002fc <GPIO_PeriClockControl+0x80>
	{
		if(pGPIOx == GPIOA){
 800028e:	687b      	ldr	r3, [r7, #4]
 8000290:	4a38      	ldr	r2, [pc, #224]	; (8000374 <GPIO_PeriClockControl+0xf8>)
 8000292:	4293      	cmp	r3, r2
 8000294:	d106      	bne.n	80002a4 <GPIO_PeriClockControl+0x28>
			GPIOA_PERI_CLOCK_ENABLE();
 8000296:	4b38      	ldr	r3, [pc, #224]	; (8000378 <GPIO_PeriClockControl+0xfc>)
 8000298:	699b      	ldr	r3, [r3, #24]
 800029a:	4a37      	ldr	r2, [pc, #220]	; (8000378 <GPIO_PeriClockControl+0xfc>)
 800029c:	f043 0304 	orr.w	r3, r3, #4
 80002a0:	6193      	str	r3, [r2, #24]
								}
		else if(pGPIOx == GPIOE){
			GPIOE_PERI_CLOCK_DISABLE();
								}
	}
}
 80002a2:	e061      	b.n	8000368 <GPIO_PeriClockControl+0xec>
		else if(pGPIOx == GPIOB){
 80002a4:	687b      	ldr	r3, [r7, #4]
 80002a6:	4a35      	ldr	r2, [pc, #212]	; (800037c <GPIO_PeriClockControl+0x100>)
 80002a8:	4293      	cmp	r3, r2
 80002aa:	d106      	bne.n	80002ba <GPIO_PeriClockControl+0x3e>
			GPIOB_PERI_CLOCK_ENABLE();
 80002ac:	4b32      	ldr	r3, [pc, #200]	; (8000378 <GPIO_PeriClockControl+0xfc>)
 80002ae:	699b      	ldr	r3, [r3, #24]
 80002b0:	4a31      	ldr	r2, [pc, #196]	; (8000378 <GPIO_PeriClockControl+0xfc>)
 80002b2:	f043 0308 	orr.w	r3, r3, #8
 80002b6:	6193      	str	r3, [r2, #24]
}
 80002b8:	e056      	b.n	8000368 <GPIO_PeriClockControl+0xec>
		else if(pGPIOx == GPIOC){
 80002ba:	687b      	ldr	r3, [r7, #4]
 80002bc:	4a30      	ldr	r2, [pc, #192]	; (8000380 <GPIO_PeriClockControl+0x104>)
 80002be:	4293      	cmp	r3, r2
 80002c0:	d106      	bne.n	80002d0 <GPIO_PeriClockControl+0x54>
			GPIOC_PERI_CLOCK_ENABLE();
 80002c2:	4b2d      	ldr	r3, [pc, #180]	; (8000378 <GPIO_PeriClockControl+0xfc>)
 80002c4:	699b      	ldr	r3, [r3, #24]
 80002c6:	4a2c      	ldr	r2, [pc, #176]	; (8000378 <GPIO_PeriClockControl+0xfc>)
 80002c8:	f043 0310 	orr.w	r3, r3, #16
 80002cc:	6193      	str	r3, [r2, #24]
}
 80002ce:	e04b      	b.n	8000368 <GPIO_PeriClockControl+0xec>
		else if(pGPIOx == GPIOD){
 80002d0:	687b      	ldr	r3, [r7, #4]
 80002d2:	4a2c      	ldr	r2, [pc, #176]	; (8000384 <GPIO_PeriClockControl+0x108>)
 80002d4:	4293      	cmp	r3, r2
 80002d6:	d106      	bne.n	80002e6 <GPIO_PeriClockControl+0x6a>
			GPIOD_PERI_CLOCK_ENABLE();
 80002d8:	4b27      	ldr	r3, [pc, #156]	; (8000378 <GPIO_PeriClockControl+0xfc>)
 80002da:	699b      	ldr	r3, [r3, #24]
 80002dc:	4a26      	ldr	r2, [pc, #152]	; (8000378 <GPIO_PeriClockControl+0xfc>)
 80002de:	f043 0320 	orr.w	r3, r3, #32
 80002e2:	6193      	str	r3, [r2, #24]
}
 80002e4:	e040      	b.n	8000368 <GPIO_PeriClockControl+0xec>
		else if(pGPIOx == GPIOE){
 80002e6:	687b      	ldr	r3, [r7, #4]
 80002e8:	4a27      	ldr	r2, [pc, #156]	; (8000388 <GPIO_PeriClockControl+0x10c>)
 80002ea:	4293      	cmp	r3, r2
 80002ec:	d13c      	bne.n	8000368 <GPIO_PeriClockControl+0xec>
			GPIOE_PERI_CLOCK_ENABLE();
 80002ee:	4b22      	ldr	r3, [pc, #136]	; (8000378 <GPIO_PeriClockControl+0xfc>)
 80002f0:	699b      	ldr	r3, [r3, #24]
 80002f2:	4a21      	ldr	r2, [pc, #132]	; (8000378 <GPIO_PeriClockControl+0xfc>)
 80002f4:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80002f8:	6193      	str	r3, [r2, #24]
}
 80002fa:	e035      	b.n	8000368 <GPIO_PeriClockControl+0xec>
		if(pGPIOx == GPIOA){
 80002fc:	687b      	ldr	r3, [r7, #4]
 80002fe:	4a1d      	ldr	r2, [pc, #116]	; (8000374 <GPIO_PeriClockControl+0xf8>)
 8000300:	4293      	cmp	r3, r2
 8000302:	d106      	bne.n	8000312 <GPIO_PeriClockControl+0x96>
			GPIOA_PERI_CLOCK_DISABLE();
 8000304:	4b1c      	ldr	r3, [pc, #112]	; (8000378 <GPIO_PeriClockControl+0xfc>)
 8000306:	699b      	ldr	r3, [r3, #24]
 8000308:	4a1b      	ldr	r2, [pc, #108]	; (8000378 <GPIO_PeriClockControl+0xfc>)
 800030a:	f023 0304 	bic.w	r3, r3, #4
 800030e:	6193      	str	r3, [r2, #24]
}
 8000310:	e02a      	b.n	8000368 <GPIO_PeriClockControl+0xec>
		else if(pGPIOx == GPIOB){
 8000312:	687b      	ldr	r3, [r7, #4]
 8000314:	4a19      	ldr	r2, [pc, #100]	; (800037c <GPIO_PeriClockControl+0x100>)
 8000316:	4293      	cmp	r3, r2
 8000318:	d106      	bne.n	8000328 <GPIO_PeriClockControl+0xac>
			GPIOB_PERI_CLOCK_DISABLE();
 800031a:	4b17      	ldr	r3, [pc, #92]	; (8000378 <GPIO_PeriClockControl+0xfc>)
 800031c:	699b      	ldr	r3, [r3, #24]
 800031e:	4a16      	ldr	r2, [pc, #88]	; (8000378 <GPIO_PeriClockControl+0xfc>)
 8000320:	f023 0308 	bic.w	r3, r3, #8
 8000324:	6193      	str	r3, [r2, #24]
}
 8000326:	e01f      	b.n	8000368 <GPIO_PeriClockControl+0xec>
		else if(pGPIOx == GPIOC){
 8000328:	687b      	ldr	r3, [r7, #4]
 800032a:	4a15      	ldr	r2, [pc, #84]	; (8000380 <GPIO_PeriClockControl+0x104>)
 800032c:	4293      	cmp	r3, r2
 800032e:	d106      	bne.n	800033e <GPIO_PeriClockControl+0xc2>
			GPIOC_PERI_CLOCK_DISABLE();
 8000330:	4b11      	ldr	r3, [pc, #68]	; (8000378 <GPIO_PeriClockControl+0xfc>)
 8000332:	699b      	ldr	r3, [r3, #24]
 8000334:	4a10      	ldr	r2, [pc, #64]	; (8000378 <GPIO_PeriClockControl+0xfc>)
 8000336:	f023 0310 	bic.w	r3, r3, #16
 800033a:	6193      	str	r3, [r2, #24]
}
 800033c:	e014      	b.n	8000368 <GPIO_PeriClockControl+0xec>
		else if(pGPIOx == GPIOD){
 800033e:	687b      	ldr	r3, [r7, #4]
 8000340:	4a10      	ldr	r2, [pc, #64]	; (8000384 <GPIO_PeriClockControl+0x108>)
 8000342:	4293      	cmp	r3, r2
 8000344:	d106      	bne.n	8000354 <GPIO_PeriClockControl+0xd8>
			GPIOD_PERI_CLOCK_DISABLE();
 8000346:	4b0c      	ldr	r3, [pc, #48]	; (8000378 <GPIO_PeriClockControl+0xfc>)
 8000348:	699b      	ldr	r3, [r3, #24]
 800034a:	4a0b      	ldr	r2, [pc, #44]	; (8000378 <GPIO_PeriClockControl+0xfc>)
 800034c:	f023 0320 	bic.w	r3, r3, #32
 8000350:	6193      	str	r3, [r2, #24]
}
 8000352:	e009      	b.n	8000368 <GPIO_PeriClockControl+0xec>
		else if(pGPIOx == GPIOE){
 8000354:	687b      	ldr	r3, [r7, #4]
 8000356:	4a0c      	ldr	r2, [pc, #48]	; (8000388 <GPIO_PeriClockControl+0x10c>)
 8000358:	4293      	cmp	r3, r2
 800035a:	d105      	bne.n	8000368 <GPIO_PeriClockControl+0xec>
			GPIOE_PERI_CLOCK_DISABLE();
 800035c:	4b06      	ldr	r3, [pc, #24]	; (8000378 <GPIO_PeriClockControl+0xfc>)
 800035e:	699b      	ldr	r3, [r3, #24]
 8000360:	4a05      	ldr	r2, [pc, #20]	; (8000378 <GPIO_PeriClockControl+0xfc>)
 8000362:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8000366:	6193      	str	r3, [r2, #24]
}
 8000368:	bf00      	nop
 800036a:	370c      	adds	r7, #12
 800036c:	46bd      	mov	sp, r7
 800036e:	bc80      	pop	{r7}
 8000370:	4770      	bx	lr
 8000372:	bf00      	nop
 8000374:	40010800 	.word	0x40010800
 8000378:	40021000 	.word	0x40021000
 800037c:	40010c00 	.word	0x40010c00
 8000380:	40011000 	.word	0x40011000
 8000384:	40011400 	.word	0x40011400
 8000388:	40011800 	.word	0x40011800

0800038c <GPIO_Init>:
 *
 *
 * @return none
 * */
void GPIO_Init(GPIO_Handle_t *pGPIOHandle)
{
 800038c:	b480      	push	{r7}
 800038e:	b087      	sub	sp, #28
 8000390:	af00      	add	r7, sp, #0
 8000392:	6078      	str	r0, [r7, #4]
	uint32_t temp=0;
 8000394:	2300      	movs	r3, #0
 8000396:	617b      	str	r3, [r7, #20]
	uint8_t tempregister=0,tempin=0;
 8000398:	2300      	movs	r3, #0
 800039a:	74fb      	strb	r3, [r7, #19]
 800039c:	2300      	movs	r3, #0
 800039e:	74bb      	strb	r3, [r7, #18]
	tempregister=pGPIOHandle->GPIO_PinCnfg.GPIO_PinNumber / 8;
 80003a0:	687b      	ldr	r3, [r7, #4]
 80003a2:	791b      	ldrb	r3, [r3, #4]
 80003a4:	08db      	lsrs	r3, r3, #3
 80003a6:	74fb      	strb	r3, [r7, #19]
	tempin=pGPIOHandle->GPIO_PinCnfg.GPIO_PinNumber % 8;
 80003a8:	687b      	ldr	r3, [r7, #4]
 80003aa:	791b      	ldrb	r3, [r3, #4]
 80003ac:	f003 0307 	and.w	r3, r3, #7
 80003b0:	74bb      	strb	r3, [r7, #18]
	/*Configure the mode*/
		if(pGPIOHandle->GPIO_PinCnfg.GPIO_PinMode <= GPIO_MODE_OUT_HIGHS){
 80003b2:	687b      	ldr	r3, [r7, #4]
 80003b4:	795b      	ldrb	r3, [r3, #5]
 80003b6:	2b03      	cmp	r3, #3
 80003b8:	d826      	bhi.n	8000408 <GPIO_Init+0x7c>

				temp=(pGPIOHandle->GPIO_PinCnfg.GPIO_PinMode<<(4 * tempin));
 80003ba:	687b      	ldr	r3, [r7, #4]
 80003bc:	795b      	ldrb	r3, [r3, #5]
 80003be:	461a      	mov	r2, r3
 80003c0:	7cbb      	ldrb	r3, [r7, #18]
 80003c2:	009b      	lsls	r3, r3, #2
 80003c4:	fa02 f303 	lsl.w	r3, r2, r3
 80003c8:	617b      	str	r3, [r7, #20]
				pGPIOHandle->pGPIOx->CONFR[tempregister] &=~(0x3 <<(4 * tempin));
 80003ca:	687b      	ldr	r3, [r7, #4]
 80003cc:	681b      	ldr	r3, [r3, #0]
 80003ce:	7cfa      	ldrb	r2, [r7, #19]
 80003d0:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80003d4:	7cbb      	ldrb	r3, [r7, #18]
 80003d6:	009b      	lsls	r3, r3, #2
 80003d8:	2203      	movs	r2, #3
 80003da:	fa02 f303 	lsl.w	r3, r2, r3
 80003de:	43db      	mvns	r3, r3
 80003e0:	4618      	mov	r0, r3
 80003e2:	687b      	ldr	r3, [r7, #4]
 80003e4:	681b      	ldr	r3, [r3, #0]
 80003e6:	7cfa      	ldrb	r2, [r7, #19]
 80003e8:	4001      	ands	r1, r0
 80003ea:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
				pGPIOHandle->pGPIOx->CONFR[tempregister] |= temp;
 80003ee:	687b      	ldr	r3, [r7, #4]
 80003f0:	681b      	ldr	r3, [r3, #0]
 80003f2:	7cfa      	ldrb	r2, [r7, #19]
 80003f4:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 80003f8:	687b      	ldr	r3, [r7, #4]
 80003fa:	681b      	ldr	r3, [r3, #0]
 80003fc:	7cfa      	ldrb	r2, [r7, #19]
 80003fe:	6979      	ldr	r1, [r7, #20]
 8000400:	4301      	orrs	r1, r0
 8000402:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8000406:	e0fe      	b.n	8000606 <GPIO_Init+0x27a>
			}
		else
		{
			if(pGPIOHandle->GPIO_PinCnfg.GPIO_PinMode == GPIO_MODE_IT_FT)
 8000408:	687b      	ldr	r3, [r7, #4]
 800040a:	795b      	ldrb	r3, [r3, #5]
 800040c:	2b04      	cmp	r3, #4
 800040e:	d137      	bne.n	8000480 <GPIO_Init+0xf4>
			{
				temp=(GPIO_MODE_IN<<(4 * tempin));
 8000410:	2300      	movs	r3, #0
 8000412:	617b      	str	r3, [r7, #20]
				pGPIOHandle->pGPIOx->CONFR[tempregister] &=~(0x3 <<(4 * tempin));
 8000414:	687b      	ldr	r3, [r7, #4]
 8000416:	681b      	ldr	r3, [r3, #0]
 8000418:	7cfa      	ldrb	r2, [r7, #19]
 800041a:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 800041e:	7cbb      	ldrb	r3, [r7, #18]
 8000420:	009b      	lsls	r3, r3, #2
 8000422:	2203      	movs	r2, #3
 8000424:	fa02 f303 	lsl.w	r3, r2, r3
 8000428:	43db      	mvns	r3, r3
 800042a:	4618      	mov	r0, r3
 800042c:	687b      	ldr	r3, [r7, #4]
 800042e:	681b      	ldr	r3, [r3, #0]
 8000430:	7cfa      	ldrb	r2, [r7, #19]
 8000432:	4001      	ands	r1, r0
 8000434:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
				pGPIOHandle->pGPIOx->CONFR[tempregister] |= temp;
 8000438:	687b      	ldr	r3, [r7, #4]
 800043a:	681b      	ldr	r3, [r3, #0]
 800043c:	7cfa      	ldrb	r2, [r7, #19]
 800043e:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8000442:	687b      	ldr	r3, [r7, #4]
 8000444:	681b      	ldr	r3, [r3, #0]
 8000446:	7cfa      	ldrb	r2, [r7, #19]
 8000448:	6979      	ldr	r1, [r7, #20]
 800044a:	4301      	orrs	r1, r0
 800044c:	f843 1022 	str.w	r1, [r3, r2, lsl #2]

				EXTI->EXTI_FTSR |= (1<<pGPIOHandle->GPIO_PinCnfg.GPIO_PinNumber);
 8000450:	4b84      	ldr	r3, [pc, #528]	; (8000664 <GPIO_Init+0x2d8>)
 8000452:	68db      	ldr	r3, [r3, #12]
 8000454:	687a      	ldr	r2, [r7, #4]
 8000456:	7912      	ldrb	r2, [r2, #4]
 8000458:	4611      	mov	r1, r2
 800045a:	2201      	movs	r2, #1
 800045c:	408a      	lsls	r2, r1
 800045e:	4611      	mov	r1, r2
 8000460:	4a80      	ldr	r2, [pc, #512]	; (8000664 <GPIO_Init+0x2d8>)
 8000462:	430b      	orrs	r3, r1
 8000464:	60d3      	str	r3, [r2, #12]
				EXTI->EXTI_RTSR &= ~(1<<pGPIOHandle->GPIO_PinCnfg.GPIO_PinNumber);
 8000466:	4b7f      	ldr	r3, [pc, #508]	; (8000664 <GPIO_Init+0x2d8>)
 8000468:	689b      	ldr	r3, [r3, #8]
 800046a:	687a      	ldr	r2, [r7, #4]
 800046c:	7912      	ldrb	r2, [r2, #4]
 800046e:	4611      	mov	r1, r2
 8000470:	2201      	movs	r2, #1
 8000472:	408a      	lsls	r2, r1
 8000474:	43d2      	mvns	r2, r2
 8000476:	4611      	mov	r1, r2
 8000478:	4a7a      	ldr	r2, [pc, #488]	; (8000664 <GPIO_Init+0x2d8>)
 800047a:	400b      	ands	r3, r1
 800047c:	6093      	str	r3, [r2, #8]
 800047e:	e075      	b.n	800056c <GPIO_Init+0x1e0>
			}

			else if(pGPIOHandle->GPIO_PinCnfg.GPIO_PinMode == GPIO_MODE_IT_RT)
 8000480:	687b      	ldr	r3, [r7, #4]
 8000482:	795b      	ldrb	r3, [r3, #5]
 8000484:	2b05      	cmp	r3, #5
 8000486:	d137      	bne.n	80004f8 <GPIO_Init+0x16c>
			{
				temp=(GPIO_MODE_IN<<(4 * tempin));
 8000488:	2300      	movs	r3, #0
 800048a:	617b      	str	r3, [r7, #20]
				pGPIOHandle->pGPIOx->CONFR[tempregister] &=~(0x3 <<(4 * tempin));
 800048c:	687b      	ldr	r3, [r7, #4]
 800048e:	681b      	ldr	r3, [r3, #0]
 8000490:	7cfa      	ldrb	r2, [r7, #19]
 8000492:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8000496:	7cbb      	ldrb	r3, [r7, #18]
 8000498:	009b      	lsls	r3, r3, #2
 800049a:	2203      	movs	r2, #3
 800049c:	fa02 f303 	lsl.w	r3, r2, r3
 80004a0:	43db      	mvns	r3, r3
 80004a2:	4618      	mov	r0, r3
 80004a4:	687b      	ldr	r3, [r7, #4]
 80004a6:	681b      	ldr	r3, [r3, #0]
 80004a8:	7cfa      	ldrb	r2, [r7, #19]
 80004aa:	4001      	ands	r1, r0
 80004ac:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
				pGPIOHandle->pGPIOx->CONFR[tempregister] |= temp;
 80004b0:	687b      	ldr	r3, [r7, #4]
 80004b2:	681b      	ldr	r3, [r3, #0]
 80004b4:	7cfa      	ldrb	r2, [r7, #19]
 80004b6:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 80004ba:	687b      	ldr	r3, [r7, #4]
 80004bc:	681b      	ldr	r3, [r3, #0]
 80004be:	7cfa      	ldrb	r2, [r7, #19]
 80004c0:	6979      	ldr	r1, [r7, #20]
 80004c2:	4301      	orrs	r1, r0
 80004c4:	f843 1022 	str.w	r1, [r3, r2, lsl #2]

				EXTI->EXTI_RTSR |= (1<<pGPIOHandle->GPIO_PinCnfg.GPIO_PinNumber);
 80004c8:	4b66      	ldr	r3, [pc, #408]	; (8000664 <GPIO_Init+0x2d8>)
 80004ca:	689b      	ldr	r3, [r3, #8]
 80004cc:	687a      	ldr	r2, [r7, #4]
 80004ce:	7912      	ldrb	r2, [r2, #4]
 80004d0:	4611      	mov	r1, r2
 80004d2:	2201      	movs	r2, #1
 80004d4:	408a      	lsls	r2, r1
 80004d6:	4611      	mov	r1, r2
 80004d8:	4a62      	ldr	r2, [pc, #392]	; (8000664 <GPIO_Init+0x2d8>)
 80004da:	430b      	orrs	r3, r1
 80004dc:	6093      	str	r3, [r2, #8]
				EXTI->EXTI_FTSR &= ~(1<<pGPIOHandle->GPIO_PinCnfg.GPIO_PinNumber);
 80004de:	4b61      	ldr	r3, [pc, #388]	; (8000664 <GPIO_Init+0x2d8>)
 80004e0:	68db      	ldr	r3, [r3, #12]
 80004e2:	687a      	ldr	r2, [r7, #4]
 80004e4:	7912      	ldrb	r2, [r2, #4]
 80004e6:	4611      	mov	r1, r2
 80004e8:	2201      	movs	r2, #1
 80004ea:	408a      	lsls	r2, r1
 80004ec:	43d2      	mvns	r2, r2
 80004ee:	4611      	mov	r1, r2
 80004f0:	4a5c      	ldr	r2, [pc, #368]	; (8000664 <GPIO_Init+0x2d8>)
 80004f2:	400b      	ands	r3, r1
 80004f4:	60d3      	str	r3, [r2, #12]
 80004f6:	e039      	b.n	800056c <GPIO_Init+0x1e0>
			}
			else if(pGPIOHandle->GPIO_PinCnfg.GPIO_PinMode == GPIO_MODE_IT_FT_RT)
 80004f8:	687b      	ldr	r3, [r7, #4]
 80004fa:	795b      	ldrb	r3, [r3, #5]
 80004fc:	2b06      	cmp	r3, #6
 80004fe:	d135      	bne.n	800056c <GPIO_Init+0x1e0>
			{
				temp=(GPIO_MODE_IN<<(4 * tempin));
 8000500:	2300      	movs	r3, #0
 8000502:	617b      	str	r3, [r7, #20]
				pGPIOHandle->pGPIOx->CONFR[tempregister] &=~(0x3 <<(4 * tempin));
 8000504:	687b      	ldr	r3, [r7, #4]
 8000506:	681b      	ldr	r3, [r3, #0]
 8000508:	7cfa      	ldrb	r2, [r7, #19]
 800050a:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 800050e:	7cbb      	ldrb	r3, [r7, #18]
 8000510:	009b      	lsls	r3, r3, #2
 8000512:	2203      	movs	r2, #3
 8000514:	fa02 f303 	lsl.w	r3, r2, r3
 8000518:	43db      	mvns	r3, r3
 800051a:	4618      	mov	r0, r3
 800051c:	687b      	ldr	r3, [r7, #4]
 800051e:	681b      	ldr	r3, [r3, #0]
 8000520:	7cfa      	ldrb	r2, [r7, #19]
 8000522:	4001      	ands	r1, r0
 8000524:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
				pGPIOHandle->pGPIOx->CONFR[tempregister] |= temp;
 8000528:	687b      	ldr	r3, [r7, #4]
 800052a:	681b      	ldr	r3, [r3, #0]
 800052c:	7cfa      	ldrb	r2, [r7, #19]
 800052e:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8000532:	687b      	ldr	r3, [r7, #4]
 8000534:	681b      	ldr	r3, [r3, #0]
 8000536:	7cfa      	ldrb	r2, [r7, #19]
 8000538:	6979      	ldr	r1, [r7, #20]
 800053a:	4301      	orrs	r1, r0
 800053c:	f843 1022 	str.w	r1, [r3, r2, lsl #2]

				EXTI->EXTI_FTSR |= (1<<pGPIOHandle->GPIO_PinCnfg.GPIO_PinNumber);
 8000540:	4b48      	ldr	r3, [pc, #288]	; (8000664 <GPIO_Init+0x2d8>)
 8000542:	68db      	ldr	r3, [r3, #12]
 8000544:	687a      	ldr	r2, [r7, #4]
 8000546:	7912      	ldrb	r2, [r2, #4]
 8000548:	4611      	mov	r1, r2
 800054a:	2201      	movs	r2, #1
 800054c:	408a      	lsls	r2, r1
 800054e:	4611      	mov	r1, r2
 8000550:	4a44      	ldr	r2, [pc, #272]	; (8000664 <GPIO_Init+0x2d8>)
 8000552:	430b      	orrs	r3, r1
 8000554:	60d3      	str	r3, [r2, #12]
				EXTI->EXTI_RTSR |= (1<<pGPIOHandle->GPIO_PinCnfg.GPIO_PinNumber);
 8000556:	4b43      	ldr	r3, [pc, #268]	; (8000664 <GPIO_Init+0x2d8>)
 8000558:	689b      	ldr	r3, [r3, #8]
 800055a:	687a      	ldr	r2, [r7, #4]
 800055c:	7912      	ldrb	r2, [r2, #4]
 800055e:	4611      	mov	r1, r2
 8000560:	2201      	movs	r2, #1
 8000562:	408a      	lsls	r2, r1
 8000564:	4611      	mov	r1, r2
 8000566:	4a3f      	ldr	r2, [pc, #252]	; (8000664 <GPIO_Init+0x2d8>)
 8000568:	430b      	orrs	r3, r1
 800056a:	6093      	str	r3, [r2, #8]
			}

			uint8_t tempregisterAFIO=0,tempinAFIO=0;
 800056c:	2300      	movs	r3, #0
 800056e:	747b      	strb	r3, [r7, #17]
 8000570:	2300      	movs	r3, #0
 8000572:	743b      	strb	r3, [r7, #16]
			tempregisterAFIO=pGPIOHandle->GPIO_PinCnfg.GPIO_PinNumber / 4;
 8000574:	687b      	ldr	r3, [r7, #4]
 8000576:	791b      	ldrb	r3, [r3, #4]
 8000578:	089b      	lsrs	r3, r3, #2
 800057a:	747b      	strb	r3, [r7, #17]
			tempinAFIO=pGPIOHandle->GPIO_PinCnfg.GPIO_PinNumber % 4;
 800057c:	687b      	ldr	r3, [r7, #4]
 800057e:	791b      	ldrb	r3, [r3, #4]
 8000580:	f003 0303 	and.w	r3, r3, #3
 8000584:	743b      	strb	r3, [r7, #16]
			uint8_t portcode = GPIO_BASEADDR_TO_CODE(pGPIOHandle->pGPIOx);
 8000586:	687b      	ldr	r3, [r7, #4]
 8000588:	681b      	ldr	r3, [r3, #0]
 800058a:	4a37      	ldr	r2, [pc, #220]	; (8000668 <GPIO_Init+0x2dc>)
 800058c:	4293      	cmp	r3, r2
 800058e:	d01d      	beq.n	80005cc <GPIO_Init+0x240>
 8000590:	687b      	ldr	r3, [r7, #4]
 8000592:	681b      	ldr	r3, [r3, #0]
 8000594:	4a35      	ldr	r2, [pc, #212]	; (800066c <GPIO_Init+0x2e0>)
 8000596:	4293      	cmp	r3, r2
 8000598:	d016      	beq.n	80005c8 <GPIO_Init+0x23c>
 800059a:	687b      	ldr	r3, [r7, #4]
 800059c:	681b      	ldr	r3, [r3, #0]
 800059e:	4a34      	ldr	r2, [pc, #208]	; (8000670 <GPIO_Init+0x2e4>)
 80005a0:	4293      	cmp	r3, r2
 80005a2:	d00f      	beq.n	80005c4 <GPIO_Init+0x238>
 80005a4:	687b      	ldr	r3, [r7, #4]
 80005a6:	681b      	ldr	r3, [r3, #0]
 80005a8:	4a32      	ldr	r2, [pc, #200]	; (8000674 <GPIO_Init+0x2e8>)
 80005aa:	4293      	cmp	r3, r2
 80005ac:	d008      	beq.n	80005c0 <GPIO_Init+0x234>
 80005ae:	687b      	ldr	r3, [r7, #4]
 80005b0:	681b      	ldr	r3, [r3, #0]
 80005b2:	4a31      	ldr	r2, [pc, #196]	; (8000678 <GPIO_Init+0x2ec>)
 80005b4:	4293      	cmp	r3, r2
 80005b6:	d101      	bne.n	80005bc <GPIO_Init+0x230>
 80005b8:	2304      	movs	r3, #4
 80005ba:	e008      	b.n	80005ce <GPIO_Init+0x242>
 80005bc:	2300      	movs	r3, #0
 80005be:	e006      	b.n	80005ce <GPIO_Init+0x242>
 80005c0:	2303      	movs	r3, #3
 80005c2:	e004      	b.n	80005ce <GPIO_Init+0x242>
 80005c4:	2302      	movs	r3, #2
 80005c6:	e002      	b.n	80005ce <GPIO_Init+0x242>
 80005c8:	2301      	movs	r3, #1
 80005ca:	e000      	b.n	80005ce <GPIO_Init+0x242>
 80005cc:	2300      	movs	r3, #0
 80005ce:	73fb      	strb	r3, [r7, #15]
			AFIO_PERI_CLOCK_ENABLE();
 80005d0:	4b2a      	ldr	r3, [pc, #168]	; (800067c <GPIO_Init+0x2f0>)
 80005d2:	699b      	ldr	r3, [r3, #24]
 80005d4:	4a29      	ldr	r2, [pc, #164]	; (800067c <GPIO_Init+0x2f0>)
 80005d6:	f043 0301 	orr.w	r3, r3, #1
 80005da:	6193      	str	r3, [r2, #24]
			AFIO->AFIO_EXTICR[tempregisterAFIO]=portcode<<(tempinAFIO*4);
 80005dc:	7bfa      	ldrb	r2, [r7, #15]
 80005de:	7c3b      	ldrb	r3, [r7, #16]
 80005e0:	009b      	lsls	r3, r3, #2
 80005e2:	fa02 f103 	lsl.w	r1, r2, r3
 80005e6:	4a26      	ldr	r2, [pc, #152]	; (8000680 <GPIO_Init+0x2f4>)
 80005e8:	7c7b      	ldrb	r3, [r7, #17]
 80005ea:	3302      	adds	r3, #2
 80005ec:	f842 1023 	str.w	r1, [r2, r3, lsl #2]

			EXTI->EXTI_IMR |= (1<<pGPIOHandle->GPIO_PinCnfg.GPIO_PinNumber);
 80005f0:	4b1c      	ldr	r3, [pc, #112]	; (8000664 <GPIO_Init+0x2d8>)
 80005f2:	681b      	ldr	r3, [r3, #0]
 80005f4:	687a      	ldr	r2, [r7, #4]
 80005f6:	7912      	ldrb	r2, [r2, #4]
 80005f8:	4611      	mov	r1, r2
 80005fa:	2201      	movs	r2, #1
 80005fc:	408a      	lsls	r2, r1
 80005fe:	4611      	mov	r1, r2
 8000600:	4a18      	ldr	r2, [pc, #96]	; (8000664 <GPIO_Init+0x2d8>)
 8000602:	430b      	orrs	r3, r1
 8000604:	6013      	str	r3, [r2, #0]



		}
	/*Configure the input output mode*/
		temp=0;
 8000606:	2300      	movs	r3, #0
 8000608:	617b      	str	r3, [r7, #20]
		temp=(pGPIOHandle->GPIO_PinCnfg.GPIO_PinInputOutputMode<<((4 * tempin)+2));
 800060a:	687b      	ldr	r3, [r7, #4]
 800060c:	799b      	ldrb	r3, [r3, #6]
 800060e:	461a      	mov	r2, r3
 8000610:	7cbb      	ldrb	r3, [r7, #18]
 8000612:	009b      	lsls	r3, r3, #2
 8000614:	3302      	adds	r3, #2
 8000616:	fa02 f303 	lsl.w	r3, r2, r3
 800061a:	617b      	str	r3, [r7, #20]
		pGPIOHandle->pGPIOx->CONFR[tempregister] &=~(0x3 <<((4 * tempin)+2));
 800061c:	687b      	ldr	r3, [r7, #4]
 800061e:	681b      	ldr	r3, [r3, #0]
 8000620:	7cfa      	ldrb	r2, [r7, #19]
 8000622:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8000626:	7cbb      	ldrb	r3, [r7, #18]
 8000628:	009b      	lsls	r3, r3, #2
 800062a:	3302      	adds	r3, #2
 800062c:	2203      	movs	r2, #3
 800062e:	fa02 f303 	lsl.w	r3, r2, r3
 8000632:	43db      	mvns	r3, r3
 8000634:	4618      	mov	r0, r3
 8000636:	687b      	ldr	r3, [r7, #4]
 8000638:	681b      	ldr	r3, [r3, #0]
 800063a:	7cfa      	ldrb	r2, [r7, #19]
 800063c:	4001      	ands	r1, r0
 800063e:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
		pGPIOHandle->pGPIOx->CONFR[tempregister] |= temp;
 8000642:	687b      	ldr	r3, [r7, #4]
 8000644:	681b      	ldr	r3, [r3, #0]
 8000646:	7cfa      	ldrb	r2, [r7, #19]
 8000648:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 800064c:	687b      	ldr	r3, [r7, #4]
 800064e:	681b      	ldr	r3, [r3, #0]
 8000650:	7cfa      	ldrb	r2, [r7, #19]
 8000652:	6979      	ldr	r1, [r7, #20]
 8000654:	4301      	orrs	r1, r0
 8000656:	f843 1022 	str.w	r1, [r3, r2, lsl #2]




}
 800065a:	bf00      	nop
 800065c:	371c      	adds	r7, #28
 800065e:	46bd      	mov	sp, r7
 8000660:	bc80      	pop	{r7}
 8000662:	4770      	bx	lr
 8000664:	40010400 	.word	0x40010400
 8000668:	40010800 	.word	0x40010800
 800066c:	40010c00 	.word	0x40010c00
 8000670:	40011000 	.word	0x40011000
 8000674:	40011400 	.word	0x40011400
 8000678:	40011800 	.word	0x40011800
 800067c:	40021000 	.word	0x40021000
 8000680:	40010000 	.word	0x40010000

08000684 <GPIO_ReadFromInputPin>:
							}

}

/*Read and Write data*/
uint8_t GPIO_ReadFromInputPin(GPIO_Reg_Def_t *pGPIOx,uint8_t PinNumber){
 8000684:	b480      	push	{r7}
 8000686:	b085      	sub	sp, #20
 8000688:	af00      	add	r7, sp, #0
 800068a:	6078      	str	r0, [r7, #4]
 800068c:	460b      	mov	r3, r1
 800068e:	70fb      	strb	r3, [r7, #3]
	uint8_t value=0;
 8000690:	2300      	movs	r3, #0
 8000692:	73fb      	strb	r3, [r7, #15]
	value=((pGPIOx->IDR)>>PinNumber) & 0x1;
 8000694:	687b      	ldr	r3, [r7, #4]
 8000696:	689a      	ldr	r2, [r3, #8]
 8000698:	78fb      	ldrb	r3, [r7, #3]
 800069a:	fa22 f303 	lsr.w	r3, r2, r3
 800069e:	b2db      	uxtb	r3, r3
 80006a0:	f003 0301 	and.w	r3, r3, #1
 80006a4:	73fb      	strb	r3, [r7, #15]
	return value;
 80006a6:	7bfb      	ldrb	r3, [r7, #15]
}
 80006a8:	4618      	mov	r0, r3
 80006aa:	3714      	adds	r7, #20
 80006ac:	46bd      	mov	sp, r7
 80006ae:	bc80      	pop	{r7}
 80006b0:	4770      	bx	lr

080006b2 <GPIO_ToggleOutputPin>:
	pGPIOx->BSRR |= (Value<<PinNumber);
}
void GPIO_WriteToOutputPort(GPIO_Reg_Def_t *pGPIOx,uint8_t Value){

}
void GPIO_ToggleOutputPin(GPIO_Reg_Def_t *pGPIOx,uint8_t PinNumber){
 80006b2:	b480      	push	{r7}
 80006b4:	b085      	sub	sp, #20
 80006b6:	af00      	add	r7, sp, #0
 80006b8:	6078      	str	r0, [r7, #4]
 80006ba:	460b      	mov	r3, r1
 80006bc:	70fb      	strb	r3, [r7, #3]
	uint8_t value=0;
 80006be:	2300      	movs	r3, #0
 80006c0:	73fb      	strb	r3, [r7, #15]
	value=((pGPIOx->ODR)>>PinNumber) & 0x1;
 80006c2:	687b      	ldr	r3, [r7, #4]
 80006c4:	68da      	ldr	r2, [r3, #12]
 80006c6:	78fb      	ldrb	r3, [r7, #3]
 80006c8:	fa22 f303 	lsr.w	r3, r2, r3
 80006cc:	b2db      	uxtb	r3, r3
 80006ce:	f003 0301 	and.w	r3, r3, #1
 80006d2:	73fb      	strb	r3, [r7, #15]
	if(value==1){
 80006d4:	7bfb      	ldrb	r3, [r7, #15]
 80006d6:	2b01      	cmp	r3, #1
 80006d8:	d10a      	bne.n	80006f0 <GPIO_ToggleOutputPin+0x3e>
		pGPIOx->BSRR |=((1)<<(16+PinNumber));
 80006da:	687b      	ldr	r3, [r7, #4]
 80006dc:	691b      	ldr	r3, [r3, #16]
 80006de:	78fa      	ldrb	r2, [r7, #3]
 80006e0:	3210      	adds	r2, #16
 80006e2:	2101      	movs	r1, #1
 80006e4:	fa01 f202 	lsl.w	r2, r1, r2
 80006e8:	431a      	orrs	r2, r3
 80006ea:	687b      	ldr	r3, [r7, #4]
 80006ec:	611a      	str	r2, [r3, #16]
	}else{
		pGPIOx->BSRR |= (1<<PinNumber);
	}


}
 80006ee:	e008      	b.n	8000702 <GPIO_ToggleOutputPin+0x50>
		pGPIOx->BSRR |= (1<<PinNumber);
 80006f0:	687b      	ldr	r3, [r7, #4]
 80006f2:	691b      	ldr	r3, [r3, #16]
 80006f4:	78fa      	ldrb	r2, [r7, #3]
 80006f6:	2101      	movs	r1, #1
 80006f8:	fa01 f202 	lsl.w	r2, r1, r2
 80006fc:	431a      	orrs	r2, r3
 80006fe:	687b      	ldr	r3, [r7, #4]
 8000700:	611a      	str	r2, [r3, #16]
}
 8000702:	bf00      	nop
 8000704:	3714      	adds	r7, #20
 8000706:	46bd      	mov	sp, r7
 8000708:	bc80      	pop	{r7}
 800070a:	4770      	bx	lr

0800070c <__libc_init_array>:
 800070c:	b570      	push	{r4, r5, r6, lr}
 800070e:	2600      	movs	r6, #0
 8000710:	4d0c      	ldr	r5, [pc, #48]	; (8000744 <__libc_init_array+0x38>)
 8000712:	4c0d      	ldr	r4, [pc, #52]	; (8000748 <__libc_init_array+0x3c>)
 8000714:	1b64      	subs	r4, r4, r5
 8000716:	10a4      	asrs	r4, r4, #2
 8000718:	42a6      	cmp	r6, r4
 800071a:	d109      	bne.n	8000730 <__libc_init_array+0x24>
 800071c:	f000 f81a 	bl	8000754 <_init>
 8000720:	2600      	movs	r6, #0
 8000722:	4d0a      	ldr	r5, [pc, #40]	; (800074c <__libc_init_array+0x40>)
 8000724:	4c0a      	ldr	r4, [pc, #40]	; (8000750 <__libc_init_array+0x44>)
 8000726:	1b64      	subs	r4, r4, r5
 8000728:	10a4      	asrs	r4, r4, #2
 800072a:	42a6      	cmp	r6, r4
 800072c:	d105      	bne.n	800073a <__libc_init_array+0x2e>
 800072e:	bd70      	pop	{r4, r5, r6, pc}
 8000730:	f855 3b04 	ldr.w	r3, [r5], #4
 8000734:	4798      	blx	r3
 8000736:	3601      	adds	r6, #1
 8000738:	e7ee      	b.n	8000718 <__libc_init_array+0xc>
 800073a:	f855 3b04 	ldr.w	r3, [r5], #4
 800073e:	4798      	blx	r3
 8000740:	3601      	adds	r6, #1
 8000742:	e7f2      	b.n	800072a <__libc_init_array+0x1e>
 8000744:	0800076c 	.word	0x0800076c
 8000748:	0800076c 	.word	0x0800076c
 800074c:	0800076c 	.word	0x0800076c
 8000750:	08000770 	.word	0x08000770

08000754 <_init>:
 8000754:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000756:	bf00      	nop
 8000758:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800075a:	bc08      	pop	{r3}
 800075c:	469e      	mov	lr, r3
 800075e:	4770      	bx	lr

08000760 <_fini>:
 8000760:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000762:	bf00      	nop
 8000764:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000766:	bc08      	pop	{r3}
 8000768:	469e      	mov	lr, r3
 800076a:	4770      	bx	lr
